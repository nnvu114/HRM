/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.minori.hrm.models;

import java.io.Serializable;
import java.sql.Timestamp;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Admin
 */
@Entity
@Table(name = "epm_relationship")
@NamedQueries({
    @NamedQuery(name = "EpmRelationship.findAll", query = "SELECT e FROM EpmRelationship e")})
public class EpmRelationship implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    
    @Column(name = "relationshi_id")
    private Integer relationshiId;
    
    @Column(name = "relationship_type")
    private int relationshipType;
    
    @Column(name = "relationship_name")
    private String relationshipName;
    @Lob
    @Column(name = "relationship_des")
    private String relationshipDes;
    
    @Column(name = "birthday")
    
    private Timestamp birthday;
    
    @Column(name = "address")
    private String address;
    
    @Column(name = "career")
    private String career;
    @Column(name = "created_date")
    
    private Timestamp createdDate;
    @Column(name = "updated_date")
    
    private Timestamp updatedDate;
    
    @Column(name = "created_by")
    private String createdBy;
    @Column(name = "updated_by")
    private String updatedBy;
    @JoinColumn(name = "employee_id", referencedColumnName = "employee_id")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    private Employee employee;

    public EpmRelationship() {
    }

    public EpmRelationship(Integer relationshiId) {
        this.relationshiId = relationshiId;
    }

    public EpmRelationship(Integer relationshiId, int relationshipType, String relationshipName, Timestamp birthday, String address, String career, String createdBy) {
        this.relationshiId = relationshiId;
        this.relationshipType = relationshipType;
        this.relationshipName = relationshipName;
        this.birthday = birthday;
        this.address = address;
        this.career = career;
        this.createdBy = createdBy;
    }

    public Integer getRelationshiId() {
        return relationshiId;
    }

    public void setRelationshiId(Integer relationshiId) {
        this.relationshiId = relationshiId;
    }

    public int getRelationshipType() {
        return relationshipType;
    }

    public void setRelationshipType(int relationshipType) {
        this.relationshipType = relationshipType;
    }

    public String getRelationshipName() {
        return relationshipName;
    }

    public void setRelationshipName(String relationshipName) {
        this.relationshipName = relationshipName;
    }

    public String getRelationshipDes() {
        return relationshipDes;
    }

    public void setRelationshipDes(String relationshipDes) {
        this.relationshipDes = relationshipDes;
    }

    public Timestamp getBirthday() {
        return birthday;
    }

    public void setBirthday(Timestamp birthday) {
        this.birthday = birthday;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getCareer() {
        return career;
    }

    public void setCareer(String career) {
        this.career = career;
    }

    public Timestamp getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    public Timestamp getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Timestamp updatedDate) {
        this.updatedDate = updatedDate;
    }

    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public String getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (relationshiId != null ? relationshiId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof EpmRelationship)) {
            return false;
        }
        EpmRelationship other = (EpmRelationship) object;
        if ((this.relationshiId == null && other.relationshiId != null) || (this.relationshiId != null && !this.relationshiId.equals(other.relationshiId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "hrm.EpmRelationship[ relationshiId=" + relationshiId + " ]";
    }
    
}
