/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.minori.hrm.models;

import java.io.Serializable;
import java.sql.Timestamp;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Admin
 */
@Entity
@Table(name = "epm_deduction")
@NamedQueries({
    @NamedQuery(name = "EpmDeduction.findAll", query = "SELECT e FROM EpmDeduction e")})
public class EpmDeduction implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    
    @Column(name = "deduction_id")
    private Integer deductionId;
    
    @Column(name = "deduction_master_id")
    private int deductionMasterId;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
    @Column(name = "amount")
    private Double amount;
    @Column(name = "status")
    private Integer status;
    @Column(name = "description")
    private String description;
    @Column(name = "expire_date")
    private Integer expireDate;
    @Column(name = "created_date")
    
    private Timestamp createdDate;
    @Column(name = "updated_date")
    
    private Timestamp updatedDate;
    
    @Column(name = "created_by")
    private String createdBy;
    @Column(name = "updated_by")
    private String updatedBy;
    @JoinColumn(name = "employee_id", referencedColumnName = "employee_id")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    private Employee employee;

    public EpmDeduction() {
    }

    public EpmDeduction(Integer deductionId) {
        this.deductionId = deductionId;
    }

    public EpmDeduction(Integer deductionId, int deductionMasterId, String createdBy) {
        this.deductionId = deductionId;
        this.deductionMasterId = deductionMasterId;
        this.createdBy = createdBy;
    }

    public Integer getDeductionId() {
        return deductionId;
    }

    public void setDeductionId(Integer deductionId) {
        this.deductionId = deductionId;
    }

    public int getDeductionMasterId() {
        return deductionMasterId;
    }

    public void setDeductionMasterId(int deductionMasterId) {
        this.deductionMasterId = deductionMasterId;
    }

    public Double getAmount() {
        return amount;
    }

    public void setAmount(Double amount) {
        this.amount = amount;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getExpireDate() {
        return expireDate;
    }

    public void setExpireDate(Integer expireDate) {
        this.expireDate = expireDate;
    }

    public Timestamp getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    public Timestamp getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Timestamp updatedDate) {
        this.updatedDate = updatedDate;
    }

    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public String getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (deductionId != null ? deductionId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof EpmDeduction)) {
            return false;
        }
        EpmDeduction other = (EpmDeduction) object;
        if ((this.deductionId == null && other.deductionId != null) || (this.deductionId != null && !this.deductionId.equals(other.deductionId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "hrm.EpmDeduction[ deductionId=" + deductionId + " ]";
    }
    
}
