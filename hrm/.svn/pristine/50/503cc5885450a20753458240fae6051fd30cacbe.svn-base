/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.minori.hrm.models;

import java.io.Serializable;
import java.sql.Timestamp;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Admin
 */
@Entity
@Table(name = "epm_medical_records")
@NamedQueries({
    @NamedQuery(name = "EpmMedicalRecords.findAll", query = "SELECT e FROM EpmMedicalRecords e")})
public class EpmMedicalRecords implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    
    @Column(name = "medical_record_id")
    private Integer medicalRecordId;
    
    @Column(name = "name")
    private String name;
    @Column(name = "examination_day")
    
    private Timestamp examinationDay;
    
    @Column(name = "delete")
    private boolean delete;
    
    @Lob
    @Column(name = "description")
    private String description;
    
    @Lob
    @Column(name = "place")
    private String place;
    
    @Column(name = "cost")
    private double cost;
    
    @Column(name = "status")
    private int status;
    @Column(name = "created_date")
    
    private Timestamp createdDate;
    @Column(name = "updated_date")
    
    private Timestamp updatedDate;
    
    @Column(name = "created_by")
    private String createdBy;
    @Column(name = "updated_by")
    private String updatedBy;
    @JoinColumn(name = "employee_id", referencedColumnName = "employee_id")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    private Employee employee;

    public EpmMedicalRecords() {
    }

    public EpmMedicalRecords(Integer medicalRecordId) {
        this.medicalRecordId = medicalRecordId;
    }

    public EpmMedicalRecords(Integer medicalRecordId, String name, boolean delete, String description, String place, double cost, int status, String createdBy) {
        this.medicalRecordId = medicalRecordId;
        this.name = name;
        this.delete = delete;
        this.description = description;
        this.place = place;
        this.cost = cost;
        this.status = status;
        this.createdBy = createdBy;
    }

    public Integer getMedicalRecordId() {
        return medicalRecordId;
    }

    public void setMedicalRecordId(Integer medicalRecordId) {
        this.medicalRecordId = medicalRecordId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Timestamp getExaminationDay() {
        return examinationDay;
    }

    public void setExaminationDay(Timestamp examinationDay) {
        this.examinationDay = examinationDay;
    }

    public boolean getDelete() {
        return delete;
    }

    public void setDelete(boolean delete) {
        this.delete = delete;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getPlace() {
        return place;
    }

    public void setPlace(String place) {
        this.place = place;
    }

    public double getCost() {
        return cost;
    }

    public void setCost(double cost) {
        this.cost = cost;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public Timestamp getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    public Timestamp getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Timestamp updatedDate) {
        this.updatedDate = updatedDate;
    }

    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public String getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (medicalRecordId != null ? medicalRecordId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof EpmMedicalRecords)) {
            return false;
        }
        EpmMedicalRecords other = (EpmMedicalRecords) object;
        if ((this.medicalRecordId == null && other.medicalRecordId != null) || (this.medicalRecordId != null && !this.medicalRecordId.equals(other.medicalRecordId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "hrm.EpmMedicalRecords[ medicalRecordId=" + medicalRecordId + " ]";
    }
    
}
