/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.minori.hrm.models;

import java.io.Serializable;
import java.sql.Timestamp;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Admin
 */
@Entity
@Table(name = "evl_kpi_result")
@NamedQueries({
	@NamedQuery(name = "EvlKpiResult.findAll", query = "SELECT e FROM EvlKpiResult e")})
public class EvlKpiResult implements Serializable {

	private static final long serialVersionUID = 1L;
	@Id
	
	@Column(name = "kpi_result_id")
	private Integer kpiResultId;
	// @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
	@Column(name = "result")
	private Float result;
	@Lob
	@Column(name = "comment")
	private String comment;
	@Column(name = "created_date")
	
	private Timestamp createdDate;
	@Column(name = "updated_date")
	
	private Timestamp updatedDate;
	
	@Column(name = "created_by")
	private String createdBy;
	@Column(name = "updated_by")
	private String updatedBy;
	@JoinColumn(name = "employee_id", referencedColumnName = "employee_id")
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Employee employee;
	@JoinColumn(name = "kpi_id", referencedColumnName = "kpi_id")
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private EvlKpi evlKpi;

	public EvlKpiResult() {
	}

	public EvlKpiResult(Integer kpiResultId) {
		this.kpiResultId = kpiResultId;
	}

	public EvlKpiResult(Integer kpiResultId, String createdBy) {
		this.kpiResultId = kpiResultId;
		this.createdBy = createdBy;
	}

	public Integer getKpiResultId() {
		return kpiResultId;
	}

	public void setKpiResultId(Integer kpiResultId) {
		this.kpiResultId = kpiResultId;
	}

	public Float getResult() {
		return result;
	}

	public void setResult(Float result) {
		this.result = result;
	}

	public String getComment() {
		return comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	public Timestamp getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Timestamp createdDate) {
		this.createdDate = createdDate;
	}

	public Timestamp getUpdatedDate() {
		return updatedDate;
	}

	public void setUpdatedDate(Timestamp updatedDate) {
		this.updatedDate = updatedDate;
	}

	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	public String getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	public Employee getEmployee() {
		return employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	public EvlKpi getEvlKpi() {
		return evlKpi;
	}

	public void setEvlKpi(EvlKpi evlKpi) {
		this.evlKpi = evlKpi;
	}

	@Override
	public int hashCode() {
		int hash = 0;
		hash += (kpiResultId != null ? kpiResultId.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object) {
		// TODO: Warning - this method won't work in the case the id fields are not set
		if (!(object instanceof EvlKpiResult)) {
			return false;
		}
		EvlKpiResult other = (EvlKpiResult) object;
		if ((this.kpiResultId == null && other.kpiResultId != null) || (this.kpiResultId != null && !this.kpiResultId.equals(other.kpiResultId))) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "hrm.EvlKpiResult[ kpiResultId=" + kpiResultId + " ]";
	}
	
}
