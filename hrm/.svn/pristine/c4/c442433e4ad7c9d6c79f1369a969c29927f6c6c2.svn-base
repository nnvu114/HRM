/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.minori.hrm.models;

import java.io.Serializable;
import java.sql.Timestamp;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Admin
 */
@Entity
@Table(name = "prm_payroll")
@NamedQueries({
    @NamedQuery(name = "PrmPayroll.findAll", query = "SELECT p FROM PrmPayroll p")})
public class PrmPayroll implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    
    @Column(name = "payroll_detail_id")
    private Integer payrollDetailId;
    @Column(name = "work_day")
    private Integer workDay;
    @Column(name = "standard_date")
    private Integer standardDate;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
    @Column(name = "salary_basic")
    private Double salaryBasic;
    @Column(name = "status")
    private Integer status;
    @Column(name = "amount_ot")
    private Double amountOt;
    @Column(name = "deduction_total")
    private Double deductionTotal;
    @Column(name = "allowance_total")
    private Double allowanceTotal;
    @Column(name = "month")
    private String month;
    @Column(name = "year")
    private String year;
    @Column(name = "created_date")
    
    private Timestamp createdDate;
    @Column(name = "updated_date")
    
    private Timestamp updatedDate;
    
    @Column(name = "created_by")
    private String createdBy;
    @Column(name = "updated_by")
    private String updatedBy;
    @JoinColumn(name = "employee_id", referencedColumnName = "employee_id")
    @ManyToOne(optional = false, fetch = FetchType.LAZY)
    private Employee employee;

    public PrmPayroll() {
    }

    public PrmPayroll(Integer payrollDetailId) {
        this.payrollDetailId = payrollDetailId;
    }

    public PrmPayroll(Integer payrollDetailId, String createdBy) {
        this.payrollDetailId = payrollDetailId;
        this.createdBy = createdBy;
    }

    public Integer getPayrollDetailId() {
        return payrollDetailId;
    }

    public void setPayrollDetailId(Integer payrollDetailId) {
        this.payrollDetailId = payrollDetailId;
    }

    public Integer getWorkDay() {
        return workDay;
    }

    public void setWorkDay(Integer workDay) {
        this.workDay = workDay;
    }

    public Integer getStandardDate() {
        return standardDate;
    }

    public void setStandardDate(Integer standardDate) {
        this.standardDate = standardDate;
    }

    public Double getSalaryBasic() {
        return salaryBasic;
    }

    public void setSalaryBasic(Double salaryBasic) {
        this.salaryBasic = salaryBasic;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public Double getAmountOt() {
        return amountOt;
    }

    public void setAmountOt(Double amountOt) {
        this.amountOt = amountOt;
    }

    public Double getDeductionTotal() {
        return deductionTotal;
    }

    public void setDeductionTotal(Double deductionTotal) {
        this.deductionTotal = deductionTotal;
    }

    public Double getAllowanceTotal() {
        return allowanceTotal;
    }

    public void setAllowanceTotal(Double allowanceTotal) {
        this.allowanceTotal = allowanceTotal;
    }

    public String getMonth() {
        return month;
    }

    public void setMonth(String month) {
        this.month = month;
    }

    public String getYear() {
        return year;
    }

    public void setYear(String year) {
        this.year = year;
    }

    public Timestamp getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    public Timestamp getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Timestamp updatedDate) {
        this.updatedDate = updatedDate;
    }

    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public String getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (payrollDetailId != null ? payrollDetailId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof PrmPayroll)) {
            return false;
        }
        PrmPayroll other = (PrmPayroll) object;
        if ((this.payrollDetailId == null && other.payrollDetailId != null) || (this.payrollDetailId != null && !this.payrollDetailId.equals(other.payrollDetailId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "hrm.PrmPayroll[ payrollDetailId=" + payrollDetailId + " ]";
    }
    
}
